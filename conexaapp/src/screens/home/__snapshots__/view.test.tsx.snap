// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home view should render correctly 1`] = `
<View
  style={
    {
      "backgroundColor": "#1800AE",
      "flexBasis": 0,
      "flexGrow": 1,
      "flexShrink": 1,
    }
  }
>
  <RCTSafeAreaView
    style={
      {
        "backgroundColor": "#1800AE",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
      }
    }
  >
    <View
      style={
        {
          "flexDirection": "row",
          "gap": 5,
          "justifyContent": "space-between",
          "paddingBottom": 10,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 10,
          "width": "100%",
        }
      }
    >
      <View
        style={
          {
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "gap": 5,
          }
        }
      >
        <LogoSvg />
        <Text
          style={
            {
              "color": "#FFFFFF",
              "fontSize": 27,
            }
          }
        >
          <Text
            style={
              {
                "fontWeight": "bold",
              }
            }
          >
            Olá 
          </Text>
          John Doe
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "gap": 5,
            "opacity": 1,
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            {
              "color": "#FFFFFF",
              "fontSize": 27,
            }
          }
        >
          Sair
        </Text>
        <LogOutSVG
          fill="#FFFFFF"
          height={25}
          style={{}}
          width={25}
        />
      </View>
    </View>
    <RCTScrollView
      ListEmptyComponent={[Function]}
      contentContainerStyle={
        [
          {
            "flex": 1,
          },
          {
            "padding": 24,
            "paddingBottom": 50,
          },
        ]
      }
      data={[]}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={false}
          tintColor="white"
        />
      }
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      showsVerticalScrollIndicator={false}
      stickyHeaderIndices={[]}
      viewabilityConfigCallbackPairs={[]}
    >
      <RCTRefreshControl />
      <View>
        <View
          style={
            {
              "alignItems": "center",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
            }
          }
        >
          <Text
            style={
              {
                "color": "#DDDEDF",
                "fontSize": 31,
                "textAlign": "center",
              }
            }
          >
            Nenhum registro encontrado.
 Que tal iniciar agora agora?
          </Text>
        </View>
      </View>
    </RCTScrollView>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "#FFFFFF",
          "borderBottomLeftRadius": 28,
          "borderBottomRightRadius": 28,
          "borderTopLeftRadius": 28,
          "borderTopRightRadius": 28,
          "bottom": 0,
          "height": 54,
          "justifyContent": "center",
          "opacity": 1,
          "position": "absolute",
          "width": 54,
        }
      }
    >
      <AddCircleSVG
        fill="blue"
        height={50}
        width={50}
      />
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`Home view should render correctly with user name 1`] = `
<View
  style={
    {
      "backgroundColor": "#1800AE",
      "flexBasis": 0,
      "flexGrow": 1,
      "flexShrink": 1,
    }
  }
>
  <RCTSafeAreaView
    style={
      {
        "backgroundColor": "#1800AE",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
      }
    }
  >
    <View
      style={
        {
          "flexDirection": "row",
          "gap": 5,
          "justifyContent": "space-between",
          "paddingBottom": 10,
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 10,
          "width": "100%",
        }
      }
    >
      <View
        style={
          {
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "gap": 5,
          }
        }
      >
        <LogoSvg />
        <Text
          style={
            {
              "color": "#FFFFFF",
              "fontSize": 27,
            }
          }
        >
          <Text
            style={
              {
                "fontWeight": "bold",
              }
            }
          >
            Olá 
          </Text>
          John Doe
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "gap": 5,
            "opacity": 1,
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            {
              "color": "#FFFFFF",
              "fontSize": 27,
            }
          }
        >
          Sair
        </Text>
        <LogOutSVG
          fill="#FFFFFF"
          height={25}
          style={{}}
          width={25}
        />
      </View>
    </View>
    <RCTScrollView
      ListEmptyComponent={[Function]}
      contentContainerStyle={
        [
          {
            "flex": 1,
          },
          {
            "padding": 24,
            "paddingBottom": 50,
          },
        ]
      }
      data={[]}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={false}
          tintColor="white"
        />
      }
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      showsVerticalScrollIndicator={false}
      stickyHeaderIndices={[]}
      viewabilityConfigCallbackPairs={[]}
    >
      <RCTRefreshControl />
      <View>
        <View
          style={
            {
              "alignItems": "center",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
            }
          }
        >
          <Text
            style={
              {
                "color": "#DDDEDF",
                "fontSize": 31,
                "textAlign": "center",
              }
            }
          >
            Nenhum registro encontrado.
 Que tal iniciar agora agora?
          </Text>
        </View>
      </View>
    </RCTScrollView>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "#FFFFFF",
          "borderBottomLeftRadius": 28,
          "borderBottomRightRadius": 28,
          "borderTopLeftRadius": 28,
          "borderTopRightRadius": 28,
          "bottom": 0,
          "height": 54,
          "justifyContent": "center",
          "opacity": 1,
          "position": "absolute",
          "width": 54,
        }
      }
    >
      <AddCircleSVG
        fill="blue"
        height={50}
        width={50}
      />
    </View>
  </RCTSafeAreaView>
</View>
`;
